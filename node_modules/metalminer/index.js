(function () {
    'use strict';
    var request = require('request'),
        cheerio = require('cheerio');

    var mm = module.exports = {};

    mm.options = {
        timeout: 2000
    };

    mm.getLyrics = function (metaInfo, callback) {
        var functions = [
            {
                name: "Metal Archives",
                func: getMetalArchivesLyrics,
                prio: 1,
                status: "NOT_STARTED",
                lyrics: ""
            },
            {
                name: "Dark Lyrics",
                func: getDarkLyrics,
                prio: 2,
                status: "NOT_STARTED",
                lyrics: ""
            },
            {
                name: "Song Lyrics",
                func: getSongLyrics,
                prio: 3,
                status: "NOT_STARTED",
                lyrics: ""
            }
        ];

        var callback2 = function (err, res) {
            var currObj = {};
            for (var i = 0; i < functions.length; i++) {
                if (res.caller.name === functions[i].name) {
                    currObj = functions[i];
                }
            }
            currObj.status = "DONE";
            currObj.lyrics = res.lyrics;
            var statuses = functions.map(function (single) {
                return single.status;
            });
            if (statuses.length === statuses.filter(function (single) { return single === "DONE"; }).length) {
                // All done
                var results = functions.filter(function (single) {
                    return !!single.lyrics;
                }).sort(function (a, b) {
                    return (a.prio > b.prio);
                });
                if (results.length === 0) {
                    callback("Not found");
                } else {
                    callback(null, results[0].lyrics);
                }
            }
        };

        for (var i = 0, endi = functions.length; i < endi; i++) {
            var currFunc = functions[i];
            currFunc.status = "SEARCHING";
            currFunc.func.call(currFunc, metaInfo, callback2);
        }
    };

    var getDarkLyrics = function (metaInfo, callback) {
        if (!metaInfo || !callback) {
            return;
        }
        var that = this;
        var uri = 'http://www.darklyrics.com/lyrics/';
        var artist = metaInfo.artist.toLowerCase().replace(/[^a-z]/gi, "");
        var album = metaInfo.album.toLowerCase().replace(/[^a-z]/gi, "");
        var title = metaInfo.title.toLowerCase().replace(/[^a-z]/gi, "");
        uri += artist + '/' + album + '.html';
        request(uri, function (err, res, body) {
            var $ = cheerio.load(body, { ignoreWhitespace: true }),
                $albumlyrics = $('.lyrics'),
                albumlyrics = $albumlyrics.html(),
                $songtitles = $albumlyrics.find('h3'),
                songnr = 0;
            $songtitles.each(function (key) {
                if (this.text().toLowerCase().replace(/[^a-z]/gi, "") === title) {
                    songnr = key;
                }
            });
            if (songnr === 0) {
                callback("Not found", { caller: that });
            } else {
                var songlyrics = albumlyrics.split(/<h3>\s*<a name=".*">.*<\/h3>/);
                if (songlyrics.length < songnr + 1) {
                    callback("Unknown error", { caller: that });
                } else {
                    callback(null, { caller: that, lyrics: songlyrics[songnr + 1] });
                }
            }
        });
    };

    var getMetalArchivesLyrics = function (metaInfo, callback) {
        if (!metaInfo || !callback) {
            return;
        }
        var that = this;
        var uri = 'http://www.metal-archives.com/search/ajax-advanced/searching/songs/?';
        uri += 'songTitle=' + metaInfo.title.replace(/^[0-9]{2,3} - /, "") + '&';
        uri += 'bandName=' + metaInfo.artist + '&';
        uri += 'releaseTitle=' + metaInfo.album;
        request(uri, function (err, res, body) {
            if (err) {
                callback('Unknown error', { caller: that });
                return;
            }
            body = JSON.parse(body);
            if (body.error !== '' || parseInt(body.iTotalDisplayRecords) < 1) {
                callback('Not found.', { caller: that });
                return;
            }
            if (body.aaData.length > 0 && body.aaData[0].length > 4) {
                var link = body.aaData[0][4];
                var match = link.match(/id="lyricsLink_(.*?)"/)[1];
                var href = "http://www.metal-archives.com/release/ajax-view-lyrics/id/" + match;
                request(href, function (err, res, body2) {
                    if (err) { callback('Unknown error.', { caller: that }); }
                    if (typeof callback === 'function') {
                        callback(null, { caller: that, lyrics: body2 });
                    }
                });
            }
        });
    }


    var getMetalArchivesLyrics_old = function (metaInfo, callback) {
        if (!metaInfo || !callback) {
            return;
        }
        var that = this;
        var uri = "http://www.metal-archives.com/albums/" + metaInfo.artist.toLowerCase().replace(/ /gi, '_') + '/';
        uri += metaInfo.album.toLowerCase().replace(/ /gi, "_");
        request(uri, function (err, res, body) {
            if (err) {
                callback('Unknown error', { caller: that });
                return;
            }
            var found, $, trs, link, songId, href;
            $ = cheerio.load(body, { ignoreWhitespace: true });
            trs = $('.table_lyrics tr:not([id^=song])');
            if (trs.length === 0) {
                callback('Band is not metal enough!', { caller: that });
            }
            found = false;
            var reqCallback = function (err, res, body2) {
                if (err) { callback('Unknown error.', { caller: that }); }
                if (typeof callback === 'function') {
                    callback(null, { caller: that, lyrics: body2 });
                    callback = null;
                }
            };
            for (var i = 0; i < trs.length; i++) {
                var element = trs[i];
                if ($(element).text().toLowerCase().indexOf(metaInfo.title.toLowerCase().replace(/^[0-9]{2,3} - /, "")) > -1) {
                    found = true;
                    link = $(element).find('a[id^=lyrics]');
                    if (!link || !link.attr('href') || link.attr('href').split('songId=').length < 2) {
                        callback('Found song, but no lyrics.', { caller: that });
                        return;
                    }
                    songId = link.attr('href').split('songId=')[1].split("#")[0];
                    href = "http://www.metal-archives.com/release/ajax-view-lyrics/id/" + songId;
                    request(href, reqCallback);
                }
                if (!found && i === trs.length - 1 && callback) {
                    callback('Found album, but not song.', { caller: that });
                }
            }
        });
    };

    var getSongLyrics = function (metaInfo, callback) {
        if (!metaInfo || !callback) {
            return;
        }
        var that = this;
        var uri = "http://www.songlyrics.com/" + metaInfo.artist.toLowerCase().replace(/ /gi, '-') + '/';
        uri += metaInfo.title.toLowerCase().replace(/^[0-9]{2,3} - /, "").replace(/ /gi, '-') + '-lyrics';
        request(uri, function (err, res, body) {
            if (err) {
                callback('Unknown error', { caller: that });
                return;
            }
            var $ = cheerio.load(body, { ignoreWhitepace: true });
            $('script').remove();
            if ($('#songLyricsDiv').length === 0) {
                callback('Song not found.', { caller: that });
            } else {
                if ($('#songLyricsDiv').children().length > 0 &&
                    $('#songLyricsDiv').text().indexOf('Sorry, we have no') < 0) {
                    callback(null, { caller: that, lyrics: $('#songLyricsDiv').html() });
                } else {
                    callback('Could not find lyrics.', { caller: that });
                }
            }
        });
    };
})();