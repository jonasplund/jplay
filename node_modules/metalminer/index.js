(function () {
    var request = require('request'),
        cheerio = require('cheerio');

    module.exports.getLyrics = function (metaInfo, callback) {
        /*
        var functions = [
        {
        func: this.getMetalLyrics,
        prio: 1,
        success: false
        },
        {
        func: this.getDarkLyrics,
        prio: 2,
        success: false
        }
        ];

        var callback = function (err, res) {
        console.log("callback for: " + currFunc.func);
        if (err) {
        console.log(err);
        return;
        } else {
        currFunc.success = true
        if (currFunc.prio === 1) {
        console.log(res);
        }
        }
        }

        for (var i = 0, endi = functions.length; i < endi; i++) {
        var currFunc = functions[i];
        currFunc.func.call(currFunc, metaInfo, callback);
        }*/
        var sent = false;
        this.getMetalLyrics(metaInfo, function (err, res) {
            console.log("Lyrics received from metal-archives: " + (err ? "Fail" : "Success"));
            if (err) { console.log(err); }
            else {
                if (!sent) {
                    callback(null, res);
                    sent = true;
                }
            }
        });
        this.getDarkLyrics(metaInfo, function (err, res) {
            console.log("Lyrics received from darklyrics: " + (err ? "Fail" : "Success"));
            if (err) { console.log(err); }
            else {
                if (!sent) {
                    callback(null, res);
                    sent = true;
                }
            }
        });
    }

    module.exports.getDarkLyrics = function (metaInfo, callback) {
        if (!metaInfo || !callback) {
            return;
        }
        var uri = 'http://www.darklyrics.com/lyrics/';
        var artist = metaInfo.artist.toLowerCase().replace(/[^a-z]/gi, "");
        var album = metaInfo.album.toLowerCase().replace(/[^a-z]/gi, "");
        var songnumber = parseInt(/^[0-9]{2,3}/.exec(metaInfo.title));
        uri += artist + '/' + album + '.html';
        request(uri, function (err, res, body) {
            if (err) callback('Unknown error', null);
            // Lyrics html is just <h3>title1</h3>[lyrics with a bunch of <br />]<h3>title2</h3> etc...
            // Delete everything before the matched h3, and everything after the next h3
            $ = cheerio.load(body, { ignoreWhitespace: true });
            var start = $('.lyrics>h3>a[name=' + songnumber + ']').parent().html();
            console.log($('.lyrics>h3>a[name=' + songnumber + ']').parent().html());
            var end = $('.lyrics>h3>a[name=' + (songnumber + 1) + ']').parent().html();
            if (!start || start.length === 0 || !end || end.length === 0) {
                callback("Not found 1", null);
                return;
            }
            body = body.split(start);
            if (body.length === 2) {
                body = body[1];
            } else {
                callback("Not found 2", null);
                return;
            }
            body = body.split(end);
            if (body.length === 2) {
                body = body[0];
            } else {
                body = body[0].split('<div');
                if (body.length === 1) {
                    callback("Parsing error.", null);
                } else {
                    body = body[0];
                }
            }
            // Let cheerio compensate for potentially malformed html
            body = cheerio.load(body).html();
            callback(null, body);
        });
    }

    module.exports.getMetalLyrics = function (metaInfo, callback) {
        if (!metaInfo || !callback) {
            return;
        }
        var uri = "http://www.metal-archives.com/albums/" + metaInfo.artist.toLowerCase().replace(/ /gi, "_") + "/";
        uri += metaInfo.album.toLowerCase().replace(/ /gi, "_");
        request(uri, function (err, res, body) {
            if (err) {
                callback("Unknown error", null);
            }
            var found, $, trs, link, songId, href;
            $ = cheerio.load(body, { ignoreWhitespace: true });
            trs = $(".table_lyrics tr:not([id^=song])");
            if (trs.length === 0) {
                callback("Band is not metal enough!", null);
            }
            found = false;
            for (var i = 0; i < trs.length; i++) {
                element = trs[i];
                if ($(element).text().toLowerCase().indexOf(metaInfo.title.toLowerCase().replace(/^[0-9]{2,3} - /, "")) > -1) {
                    found = true;
                    link = $(element).find("a[id^=lyrics]");
                    if (!link || !link.attr("href") || link.attr("href").split("songId=").length < 2) {
                        callback("Found song, but no lyrics.", null);
                        return;
                    }
                    songId = link.attr("href").split("songId=")[1].split("#")[0];
                    href = "http://www.metal-archives.com/release/ajax-view-lyrics/id/" + songId;
                    request(href, function (err, res, body2) {
                        if (err) callback("Unknown error.");
                        callback(null, body2);
                        callback = null;
                    });
                }
                if (!found && i === trs.length - 1 && callback) {
                    callback("Found album, but not song.", null);
                }
            }
        });
    }
})();